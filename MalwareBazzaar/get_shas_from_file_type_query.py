import requests
import json
import argparse
from pathlib import Path


def main():
    parser = argparse.ArgumentParser(description="Query Abuse.ch API for sha256 hashes.")
    parser.add_argument("--limit", type=int, default=1000, help="Limit the number of results (default: 1000)")
    parser.add_argument("--file_type", default="elf", help="Specify the file type (default: elf)")
    parser.add_argument("--output_file", type=Path, default="sha256_hashes.txt", help="Specify the output file (default: sha256_hashes.txt)")
    args = parser.parse_args()

    if args.output_file.exists():
        print(f"{args.output_file.as_posix()} exists, will append to the file.")

    url = "https://mb-api.abuse.ch/api/v1/"
    data = {
        "query": "get_file_type",
        "file_type": args.file_type,
        "limit": args.limit
    }

    response = requests.post(url, data=data)

    if response.status_code == 200:
        response_data = json.loads(response.text)
        
        if response_data.get("query_status") == "ok":
            sha256_hashes = [entry["sha256_hash"] for entry in response_data.get("data", [])]
            
            with open(args.output_file, "a") as file:
                for sha256_hash in sha256_hashes:
                    file.write(sha256_hash + "\n")
            
            print(f"Sha256 hashes saved to '{args.output_file}'")
        else:
            print("Query status is not 'ok'.")
    else:
        print(f"Request failed with status code {response.status_code}")

if __name__ == "__main__":
    main()

